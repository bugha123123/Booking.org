@using Hotel.org.DTO
@using Hotel.org.Models
@model AllHotelsViewModel

<div class="grid md:grid-cols-2 gap-6 p-4 md:p-6">
    <div class="bg-white rounded-lg shadow-md dark:bg-gray-950">
        <div class="p-4 md:p-6 border-b dark:border-gray-800 d-flex justify-content-between">
            <h2 class="text-lg font-semibold">Filters</h2>
            <nav>
                <ul class="pagination">
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                            <a class="page-link" href="@Url.Action("AllHotelsPage", new { page = i })">@i</a>
                        </li>
                    }
                </ul>
            </nav>
        </div>
 
        <div class="p-4 md:p-6 space-y-6">
       
            <div>
                @using (Html.BeginForm("AllHotelsPage", "Hotel", FormMethod.Get))
                {
                    <div class="price-slider">
                        <input type="range" min="0" max="1300" value="0" step="1" class="slider" id="priceRange" name="minPrice">
                        <input type="range" min="0" max="1300" value="0" step="1" class="slider" id="priceRange2" name="maxPrice">
                        <div class="slider-values">
                            <span id="priceStart">0</span>
                            <span id="priceEnd">0</span>
                        </div>
                    </div>

                    <div>
                        <h3 class="text-base font-semibold mb-2">Amenities</h3>
                        <div class="space-y-2">
                            <!-- Gym Checkbox -->
                            <div class="flex items-center gap-2">
                                <input type="checkbox" id="amenity-gym" name="hasGym" class="peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2" />
                                <label class="text-sm leading-none font-normal" for="amenity-gym">Gym</label>
                            </div>
                            <!-- Pool Checkbox -->
                            <div class="flex items-center gap-2">
                                <input type="checkbox" id="amenity-pool" name="hasPool" class="peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2" />
                                <label class="text-sm leading-none font-normal" for="amenity-pool">Pool</label>
                            </div>
                            <!-- Breakfast Checkbox -->
                            <div class="flex items-center gap-2">
                                <input type="checkbox" id="amenity-breakfast" name="hasBreakfast" class="peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2" />
                                <label class="text-sm leading-none font-normal" for="amenity-breakfast">Breakfast</label>
                            </div>
                            <div class="flex items-center gap-2">
                                <label class="text-sm leading-none font-normal" for="rating">Rating:</label>
                                <select id="rating" name="rating" class="peer h-8 w-16 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2">
                                    <option value=""></option>

                                    <option value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                    <option value="5">5</option>
                                </select>
                            </div>

                            <div class="flex items-center gap-2">
                                <label class="text-sm leading-none font-normal" for="numberOfRooms">Number of Rooms:</label>
                                <select id="numberOfRooms" name="numberOfRooms" class="peer h-8 w-16 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2">
                                    <!-- You can adjust the range as needed -->
                                    <option value=""></option>

                                    @for (int i = 1; i <= 120; i++)
                                    {
                                        <option value="@i">@i</option>
                                    }


                                </select>
                            </div>

                        </div>
                    </div>

                    <button type="submit" class="mt-3 btn btn-dark">Apply Filters</button>
                    <a asp-action="AllHotelsPage" asp-controller="Hotel"> <button type="button" class="mt-3 ml-3 btn btn-primary" >Clear Filters</button></a>
                   
                }
            </div>
        </div>
    </div>
    <div class="grid sm:grid-cols-2 md:grid-cols-2 gap-4 md:gap-6">
       
  @foreach (var hotel in Model.Hotels)
        {
            <div class="bg-white rounded-lg shadow-md dark:bg-gray-950">

                <a class="block" asp-action="HotelDetailsPage" asp-controller="Hotel" asp-route-HotelId="@hotel.Id" rel="ugc">
    <img src="@hotel.RoomImage"
         alt="Hotel Image"
         width="400"
         height="300" 
         class="rounded-t-lg w-full h-full object-cover img-fluid" />
</a>

                <div class="p-4 md:p-6">
                    <div class="flex justify-between items-start mb-2">
                        <h3 class="text-lg font-semibold">@hotel.City</h3>
                        <div class="text-lg font-semibold">@hotel.AveragePricePerNight/night</div>
                    </div>
                    <div class="flex flex-wrap gap-2">
                        <div class="bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded-md text-sm">
                            @if (hotel.Wifi){
                                <div class="bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded-md text-sm">Wifi</div>
                              }
                    </div>
 <div class="bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded-md text-sm">
                            @if (hotel.Pool){
                                <div class="bg-gray-100 dark:bg-gray-800 px-2 py-1 rounded-md text-sm">Pool</div>
                              }
                    </div>
                    </div>
                         
                    </div>

                        </div>
           
        }
    </div>

</div>


<script>
    // Get the elements
    var priceRange = document.getElementById("priceRange");
    var priceRange2 = document.getElementById("priceRange2");
    var priceStart = document.getElementById("priceStart");
    var priceEnd = document.getElementById("priceEnd");

    // Update the current slider value (price range)
    priceRange.oninput = function () {
        priceStart.textContent = this.value;
    }

    priceRange2.oninput = function () {
        priceEnd.textContent = this.value;
    }

 
</script>